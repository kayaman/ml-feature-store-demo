name: Deploy to Dev

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize]

concurrency:
  group: dev-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest black ruff mypy
      
      - name: Run linters
        run: |
          black --check src/ tests/
          ruff check src/ tests/
      
      - name: Run unit tests
        run: |
          pytest tests/unit -v --cov=src --cov-report=xml
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          flags: unittests

  deploy-dev:
    needs: lint-and-test
    runs-on: ubuntu-latest
    environment: dev
    env:
      DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
      DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Databricks CLI
        uses: databricks/setup-cli@main
      
      - name: Validate bundle
        run: databricks bundle validate --target dev
      
      - name: Deploy to dev
        run: databricks bundle deploy --target dev
      
      - name: Run feature computation
        run: |
          databricks bundle run feature_computation_job --target dev --refresh-all
      
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployed to dev environment successfully!'
            })